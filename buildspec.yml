name: Android UI Tests

on:
  push:
    branches:
      - main
    paths:
      - 'apps/**'
      - 'tests/**'
  workflow_dispatch:

jobs:
  test_android:
    runs-on: ubuntu-latest

    steps:
    # 1. Checkout del código
    - name: Checkout repository
      uses: actions/checkout@v3

    # 2. Configurar Java 11
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: '11'  
    # Java Corretto es equivalente a OpenJDK en CI :contentReference[oaicite:0]{index=0}

    # 3. Configurar Android SDK
    - name: Set up Android SDK
      uses: android-actions/setup-android@v3
      with:
        api-level: 29
        build-tools: '29.0.3'
        cmake: false  
    # Esta acción instala cmdline-tools y platform-tools, acepta licencias y añade sdkmanager/adb al PATH :contentReference[oaicite:1]{index=1}

    # 4. Crear y arrancar el emulador
    - name: Create AVD
      run: echo "no" | avdmanager create avd -n testAVD -k "system-images;android-29;google_apis;x86_64" --force
    - name: Start emulator
      run: |
        nohup emulator -avd testAVD -no-window -no-audio &
        adb wait-for-device
        adb shell input keyevent 82
    - name: Wait for emulator boot
      run: timeout 300 bash -c 'until adb shell getprop sys.boot_completed | grep -m1 "1"; do sleep 5; done'
    # Espera hasta que el emulador reporte arranque completo :contentReference[oaicite:2]{index=2}

    # 5. Configurar Python y Appium
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
    - name: Install test dependencies
      run: |
        pip install --upgrade pip
        pip install robotframework robotframework-appiumlibrary Appium-Python-Client
        npm install -g appium@next
        appium driver install uiautomator2

    # 6. Iniciar Appium y ejecutar pruebas
    - name: Start Appium server
      run: |
        nohup appium --port 4724 --log-level warn > appium.log 2>&1 &
        sleep 10
    - name: Run Robot Framework tests
      run: |
        mkdir -p results
        robot --loglevel TRACE --output results/output.xml tests/home.robot

    # 7. Publicar artefactos
    - name: Upload test results
      uses: actions/upload-artifact@v3
      with:
        name: results
        path: results
    - name: Upload Appium log
      uses: actions/upload-artifact@v3
      with:
        name: appium-log
        path: appium.log
    - name: Upload emulator log
      uses: actions/upload-artifact@v3
      with:
        name: emulator-log
        path: ~/.android/avd/testAVD.avd/*.log
