version: 0.2
run-as: root

env:
  variables:
    ANDROID_HOME: $CODEBUILD_SRC_DIR/android-sdk
    EMULATOR_NAME: testAVD
    SYSTEM_IMAGE: "system-images;android-29;google_apis;x86_64"
    TIMEOUT: 900
    PATH: $ANDROID_HOME/emulator:$ANDROID_HOME/platform-tools:$ANDROID_HOME/cmdline-tools/latest/bin:$PATH

phases:
  install:
    commands:
      - echo "=== Actualizando sistema e instalando utilidades ==="
      - yum update -y
      - yum install -y wget unzip nc

      - echo "=== Instalando Java Corretto 11 (headless) ==="
      - yum install -y java-11-amazon-corretto-headless
      - java -version

      - echo "=== Instalando Node.js 18 y Appium ==="
      - curl -sL https://rpm.nodesource.com/setup_18.x | bash -
      - yum install -y nodejs
      - npm install -g appium@next
      - appium driver install uiautomator2

      - echo "=== Instalando Python3 y Robot Framework libs ==="
      - yum install -y python3 python3-pip
      - pip3 install --upgrade pip
      - pip3 install robotframework robotframework-appiumlibrary Appium-Python-Client

      - echo "=== Descargando Android SDK Command-Line Tools ==="
      - mkdir -p $ANDROID_HOME/cmdline-tools
      - wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O cmdline-tools.zip
      - unzip cmdline-tools.zip -d $ANDROID_HOME/cmdline-tools/latest
      - rm cmdline-tools.zip

      - echo "=== Aceptando licencias y descargando componentes SDK ==="
      - yes | sdkmanager --licenses
      - sdkmanager --sdk_root=$ANDROID_HOME \
          "platform-tools" "emulator" "platforms;android-29" \
          "$SYSTEM_IMAGE" "build-tools;29.0.3"

  pre_build:
    commands:
      - echo "=== Creando AVD ==="
      - echo no | avdmanager create avd -n $EMULATOR_NAME -k "$SYSTEM_IMAGE" -d "pixel_2" --force
      - echo "hw.ramSize=2048" >> ~/.android/avd/$EMULATOR_NAME.avd/config.ini

      - echo "=== Iniciando emulador en background ==="
      - nohup emulator -avd $EMULATOR_NAME -no-window -no-audio \
          -accel off -gpu swiftshader_indirect -no-boot-anim \
          -writable-system > emulator.log 2>&1 &

      - echo "=== Esperando boot completo del emulador ==="
      - |
        TIME_ELAPSED=0
        until adb shell getprop sys.boot_completed | grep -m1 "1"; do
          sleep 5
          TIME_ELAPSED=$((TIME_ELAPSED + 5))
          if [ $TIME_ELAPSED -ge $TIMEOUT ]; then
            echo "❌ Timeout tras $TIMEOUT segundos."
            exit 1
          fi
        done
        echo "✅ Emulador listo."

  build:
    commands:
      - echo "=== Instalando dependencias de test ==="
      - pip3 install robotframework robotframework-appiumlibrary Appium-Python-Client

      - echo "=== Iniciando Appium server ==="
      - nohup appium --port 4724 --log-level warn > appium.log 2>&1 &
      - sleep 10

      - echo "=== Ejecutando pruebas con Robot Framework ==="
      - mkdir -p results
      - robot --loglevel TRACE --output results/output.xml tests/*.robot

  post_build:
    commands:
      - echo "=== Publicando artefactos ==="
      - ls -R results
      - tail -n 50 emulator.log
      - tail -n 50 appium.log

artifacts:
  files:
    - results/**/*
    - emulator.log
    - appium.log
  discard-paths: yes
